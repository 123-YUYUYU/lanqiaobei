C51 COMPILER V9.01   MAIN                                                                  03/15/2023 15:56:49 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: D:\keil4\C51\BIN\C51.EXE main.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include <STC15F2K60S2.H>
   2          
   3          unsigned char t_h = 0;
   4          unsigned char t_m = 0;
   5          unsigned char t_s = 0;
   6          unsigned char t_005s = 0;
   7          unsigned char command = 0;
   8          
   9          unsigned char code SMG_duanma[18]={0xc0,0xf9,
  10                          0xa4,0xb0,0x99,0x92,0x82,0xf8,0x80,0x90,
  11                          0x88,0x80,0xc6,0xc0,0x86,0x8e,0xbf,0x7f};
  12          
  13          void Delay(unsigned int t)
  14          {
  15   1              while(t--) ;
  16   1      }
  17          
  18          void DelaySMG(unsigned int t)
  19          {
  20   1              while(t--) ;
  21   1      }
  22          void Init_74HC573(unsigned char channel)
  23          {
  24   1              switch(channel)
  25   1              {
  26   2                      case 4:
  27   2                              P2 = (P2 & 0x1f) | 0x80;          //LED
  28   2                      break;
  29   2                      case 5:
  30   2                              P2 = (P2 & 0x1f) | 0xA0;      //蜂鸣器和继电器
  31   2                      break;
  32   2                      case 6:
  33   2                              P2 = (P2 & 0x1f) | 0xC0;         //数码管位选
  34   2                      break;
  35   2                      case 7:
  36   2                              P2 = (P2 & 0x1f) | 0xE0;         //数管段码
  37   2                      break;
  38   2                      case 0:
  39   2                              P2 = (P2 & 0x1f) | 0x00;         //关闭所有锁存器 
  40   2                      break;
  41   2              
  42   2              }
  43   1      
  44   1      }
  45          
  46          void DisplaySMG(unsigned char value, unsigned char pos)
  47          {
  48   1              Init_74HC573(4);
  49   1              P0 = 0xff;
  50   1              Init_74HC573(6);
  51   1              P0 = 0x01 << pos;
  52   1              Init_74HC573(7);
  53   1              P0 = value;
  54   1      }
  55          void Display_time()
C51 COMPILER V9.01   MAIN                                                                  03/15/2023 15:56:49 PAGE 2   

  56          {
  57   1              DisplaySMG(SMG_duanma[t_s%10],7);  
  58   1              DelaySMG(500);
  59   1              DisplaySMG(SMG_duanma[t_s/10],6);
  60   1              DelaySMG(500);
  61   1      
  62   1              DisplaySMG(SMG_duanma[16],5);
  63   1              DelaySMG(500);
  64   1      
  65   1              DisplaySMG(SMG_duanma[t_m%10],4);
  66   1              DelaySMG(500);
  67   1              DisplaySMG(SMG_duanma[t_m/10],3);
  68   1              DelaySMG(500);
  69   1      
  70   1              DisplaySMG(SMG_duanma[16],2);
  71   1              DelaySMG(500);
  72   1      
  73   1              DisplaySMG(SMG_duanma[t_h%10],1);       
  74   1              DelaySMG(500);
  75   1              DisplaySMG(SMG_duanma[t_h/10],0);    
  76   1              
  77   1      
  78   1      }
  79          void InitTimer0()
  80          {
  81   1              TMOD = 0x21;
  82   1              TH0 = (65535 - 50000) / 256; 
  83   1              TL0     = (65535 - 50000) % 256;
  84   1              ET0 = 1;         //使能定时器0
  85   1              EA = 1;                  //使能总中断
  86   1              TR0 = 1;                 //     启动定时器T0
  87   1      }
  88          
  89          void ServiceTimer0() interrupt 1
  90          {
  91   1              TH0 = (65535 - 50000) / 256; 
  92   1              TL0     = (65535 - 50000) % 256;
  93   1              t_005s ++;
  94   1              if(t_005s == 20)
  95   1              {
  96   2                      t_005s = 0;
  97   2                      t_s ++;
  98   2                      if(t_s == 60)
  99   2                      {
 100   3                              t_s = 0;
 101   3                              t_m ++;
 102   3                              if(t_m == 60)
 103   3                              {
 104   4                                      t_m = 0;
 105   4                                      t_h ++;
 106   4                              }                       
 107   3                      }       
 108   2              }       
 109   1      }
 110          
 111          void ServiceUart() interrupt 4
 112          {
 113   1              if(RI == 1)
 114   1              {
 115   2                      command = SBUF;            //把接收到的数据保存到command变量
 116   2                      RI = 0;                            //将接收完成标志RI清0
 117   2              
C51 COMPILER V9.01   MAIN                                                                  03/15/2023 15:56:49 PAGE 3   

 118   2              }
 119   1      
 120   1      }
 121          
 122          void SendByte(unsigned char dat)
 123          {
 124   1              SBUF = dat;
 125   1              while(TI == 0);
 126   1              TI = 0;
 127   1      }
 128          
 129          void InitUart()
 130          {
 131   1              TMOD = 0x21;
 132   1              TH1 = 0xfd;
 133   1              TL1 = 0xfd;
 134   1              TR1 = 1;                 //启动定时器1
 135   1      
 136   1              SCON = 0x50;    //8位UART模式，允许接发
 137   1              AUXR =0x00;     //辅助寄存器
 138   1      
 139   1              ES = 1;                 //使能串口中断
 140   1              EA = 1;                 //使能总中断
 141   1      
 142   1      }
 143          
 144          void ServiceTimer() interrupt 4
 145          {
 146   1              
 147   1      
 148   1      }
 149          void Init()
 150          {
 151   1              Init_74HC573(5);
 152   1              P0 = 0x00;
 153   1              Init_74HC573(4);
 154   1              P0 = 0xff  ;
 155   1              Init_74HC573(0);
 156   1      
 157   1              
 158   1      
 159   1      
 160   1      }
 161          void main()
 162          {
 163   1              while(1)
 164   1              {
 165   2              
 166   2              }
 167   1      
 168   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    339    ----
   CONSTANT SIZE    =     18    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      5    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.

C51 COMPILER V9.01   MAIN                                                                  03/15/2023 15:56:49 PAGE 4   


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
